<?xml version="1.0"?>
<!-- URDF for Summit XL-GEN (LunaLab variant) -->
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">

  <!--                   -->
  <!-- Imported elements -->
  <!--                   -->
  <!-- Summit XL -->
  <xacro:include filename="$(find lunalab_summit_xl_gen_description)/urdf/summit_xl/summit_xl.xacro"/>

  <!-- Manipulators -->
  <xacro:include filename="$(find lunalab_summit_xl_gen_description)/urdf/lunalab_summit_xl_manipulators.xacro"/>

  <!-- Miscellaneous -->
  <xacro:include filename="$(find lunalab_summit_xl_gen_description)/urdf/lunalab_summit_xl_misc.xacro"/>

  <!-- Sensors -->
  <xacro:include filename="$(find lunalab_summit_xl_gen_description)/urdf/lunalab_summit_xl_sensors.xacro"/>

  <!-- Gazebo plugins -->
  <xacro:include filename="$(find lunalab_summit_xl_gen_description)/urdf/lunalab_summit_xl_gen.gazebo"/>


  <!--            -->
  <!-- Parameters -->
  <!--            -->
  <!-- Name of the robot (mandatory) -->
  <xacro:arg name="name" default="lunalab_summit_xl_gen"/>
  <!-- Prefix for all entities -->
  <xacro:arg name="prefix" default="robot_"/>

  <!-- Flag to enable safety limits controllers on manipulator joints -->
  <xacro:arg name="safety_limits" default="false"/>
  <!-- Lower and upper margin for position limits of all safety controllers -->
  <xacro:arg name="safety_position_margin" default="0.17453293"/>
  <!-- Parametric k-position factor of all safety controllers -->
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Flag to enable external devices (mesh) -->
  <xacro:arg name="external_devices" default="false"/>
  <!-- Flag to enable RealSense D435 -->
  <xacro:arg name="realsense_d435" default="false"/>
  <!-- Flag to enable RealSense D455 -->
  <xacro:arg name="realsense_d455" default="false"/>
  <!-- Flag to enable RealSense L515 -->
  <xacro:arg name="realsense_l515" default="false"/>
  <!-- Flag to enable LiDAR -->
  <xacro:arg name="lidar" default="false"/>

  <!-- Flag to enable collision geometry for the chassis of Summit XL -->
  <xacro:arg name="collision_chassis" default="true"/>
  <!-- Flag to enable collision geometry for the wheels fo Summit XL -->
  <xacro:arg name="collision_wheels" default="true"/>
  <!-- Flag to enable collision geometry for manipulator's arm -->
  <xacro:arg name="collision_arm" default="true"/>
  <!-- Flag to enable collision geometry for manipulator's gripper (hand and fingers) -->
  <xacro:arg name="collision_gripper" default="true"/>
  <!-- Flag to enable collision geometry for external devices -->
  <xacro:arg name="collision_external_devices" default="true"/>
  <!-- Flag to enable collision geometry for RealSense D435 -->
  <xacro:arg name="collision_realsense_d435" default="true"/>
  <!-- Flag to enable collision geometry for RealSense D455 -->
  <xacro:arg name="collision_realsense_d455" default="true"/>
  <!-- Flag to enable collision geometry for RealSense L515 -->
  <xacro:arg name="collision_realsense_l515" default="true"/>
  <!-- Flag to enable collision geometry for LiDAR -->
  <xacro:arg name="collision_lidar" default="true"/>

  <!-- (unimplemented!) Flag to select the high or low quality model -->
  <xacro:arg name="high_quality_mesh" default="ignored"/>

  <!-- Flag to mimic joints of the gripper -->
  <xacro:arg name="mimic_gripper_joints" default="false"/>

  <!-- Flag to preserve fixed joints and prevent lumping when generating SDF for Gazebo -->
  <xacro:arg name="gazebo_preserve_fixed_joint" default="false"/>

  <!-- Flag to enable self-collision of all robot links when generating SDF for Gazebo -->
  <xacro:arg name="gazebo_self_collide" default="false"/>

  <!-- Flag to enable self-collision of robot between fingers (finger tips) when generating SDF for Gazebo -->
  <xacro:arg name="gazebo_self_collide_fingers" default="true"/>

  <!-- Flag to enable setup of Gazebo ros_planar_move plugin (mobile) -->
  <xacro:arg name="gazebo_ros_planar_move_plugin" default="false"/>

  <!-- Flag to enable setup of Gazebo ros_control plugin (manipulation) -->
  <xacro:arg name="gazebo_ros_control_plugin" default="false"/>

  <!-- Flag to enable setup of Gazebo ros_ft_sensor plugin (force torque sensor on manipulator joints) -->
  <xacro:arg name="gazebo_ros_ft_sensor" default="false"/>


  <!--            -->
  <!-- Properties -->
  <!--            -->
  <!-- Prefixes -->
  <xacro:property name="prefix_summit_xl" value="$(arg prefix)summit_xl_"/>
  <xacro:property name="prefix_manipulator" value="$(arg prefix)j2s7s300_"/>
  <xacro:property name="prefix_external_devices" value="$(arg prefix)external_devices_"/>
  <xacro:property name="prefix_realsense_d435" value="$(arg prefix)realsense_d435_"/>
  <xacro:property name="prefix_realsense_d455" value="$(arg prefix)realsense_d455_"/>
  <xacro:property name="prefix_realsense_l515" value="$(arg prefix)realsense_l515_"/>
  <xacro:property name="prefix_lidar" value="$(arg prefix)lidar_"/>

  <!-- Manipulator offset -->
  <xacro:property name="manipulator_base_parent" value="${prefix_summit_xl}base_link"/>
  <xacro:property name="manipulator_offset_xyz" value="0.204 0.0 0.11"/>
  <xacro:property name="manipulator_offset_rpy" value="0.0 0.0 0.0"/>

  <!-- External devices offset -->
  <xacro:property name="external_devices_base_parent" value="${prefix_summit_xl}base_link"/>
  <xacro:property name="external_devices_offset_xyz" value="-0.133 0.0 0.27"/>
  <xacro:property name="external_devices_offset_rpy" value="0.0 0.0 0.0"/>

  <!-- RealSense D435 offset -->
  <xacro:property name="realsense_d435_base_parent" value="${prefix_summit_xl}base_link"/>
  <xacro:property name="realsense_d435_offset_xyz" value="0.397 0.0 0.238"/>
  <xacro:property name="realsense_d435_offset_rpy" value="0.0 0.0 0.0"/>

  <!-- RealSense D455 offset -->
  <xacro:property name="realsense_d455_base_parent" value="${prefix_external_devices}link"/>
  <xacro:property name="realsense_d455_offset_xyz" value="-0.145329 0.0 0.322246"/>
  <xacro:property name="realsense_d455_offset_rpy" value="0.0 0.0 ${30*pi/180}"/>

  <!-- RealSense L515 offset -->
  <xacro:property name="realsense_l515_base_parent" value="${prefix_manipulator}link_7"/>
  <xacro:property name="realsense_l515_offset_xyz" value="0.0 0.0 -0.01"/>
  <xacro:property name="realsense_l515_offset_rpy" value="0.0 ${pi} 0.0"/>

  <!-- LiDAR offset -->
  <xacro:property name="lidar_base_parent" value="${prefix_summit_xl}base_link"/>
  <xacro:property name="lidar_offset_xyz" value="0.3 0.0 0.25"/>
  <xacro:property name="lidar_offset_rpy" value="0.0 0.0 0.0"/>


  <!--       -->
  <!-- Robot -->
  <!--       -->
  <!-- Summit XL -->
  <xacro:summit_xl
    prefix="${prefix_summit_xl}"
    add_base_footprint="true"
    collision_chassis="$(arg collision_chassis)"
    collision_wheels="$(arg collision_wheels)"
    high_quality_mesh="$(arg high_quality_mesh)"
    gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    gazebo_ros_planar_move_plugin="$(arg gazebo_ros_planar_move_plugin)"
  />

  <!-- Kinova Gen2 (Jaco2, spherical wrist, 7DOF, 3-finger gripper) -->
  <xacro:j2s7s300
    base_parent="${manipulator_base_parent}"
    prefix="${prefix_manipulator}"
    joint_base_origin_xyz="${manipulator_offset_xyz}"
    joint_base_origin_rpy="${manipulator_offset_rpy}"
    safety_limits="$(arg safety_limits)"
    safety_position_margin="$(arg safety_position_margin)"
    safety_k_position="$(arg safety_k_position)"
    collision_arm="$(arg collision_arm)"
    collision_gripper="$(arg collision_gripper)"
    high_quality_mesh="$(arg high_quality_mesh)"
    mimic_gripper_joints="$(arg mimic_gripper_joints)"
    gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    gazebo_self_collide_fingers="$(arg gazebo_self_collide_fingers)"
    gazebo_ros_control_plugin="$(arg gazebo_ros_control_plugin)"
    gazebo_ros_ft_sensor="$(arg gazebo_ros_ft_sensor)"
  />

  <!-- Miscellaneous -->
  <xacro:if value="$(arg external_devices)">
    <xacro:external_devices
      base_parent="${external_devices_base_parent}"
      prefix="${prefix_external_devices}"
      joint_origin_xyz="${external_devices_offset_xyz}"
      joint_origin_rpy="${external_devices_offset_rpy}"
      collision="$(arg collision_external_devices)"
      high_quality_mesh="$(arg high_quality_mesh)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    />
  </xacro:if>

  <!-- Sensors -->
  <xacro:if value="$(arg realsense_d435)">
    <xacro:realsense_d435
      base_parent="${realsense_d435_base_parent}"
      prefix="${prefix_realsense_d435}"
      joint_origin_xyz="${realsense_d435_offset_xyz}"
      joint_origin_rpy="${realsense_d435_offset_rpy}"
      collision="$(arg collision_realsense_d435)"
      high_quality_mesh="$(arg high_quality_mesh)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    />
  </xacro:if>
  <xacro:if value="$(arg realsense_d455)">
    <xacro:realsense_d455
      base_parent="${realsense_d455_base_parent}"
      prefix="${prefix_realsense_d455}"
      joint_origin_xyz="${realsense_d455_offset_xyz}"
      joint_origin_rpy="${realsense_d455_offset_rpy}"
      collision="$(arg collision_realsense_d455)"
      high_quality_mesh="$(arg high_quality_mesh)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    />
  </xacro:if>
  <xacro:if value="$(arg realsense_l515)">
    <xacro:realsense_l515
      base_parent="${realsense_l515_base_parent}"
      prefix="${prefix_realsense_l515}"
      joint_origin_xyz="${realsense_l515_offset_xyz}"
      joint_origin_rpy="${realsense_l515_offset_rpy}"
      collision="$(arg collision_realsense_l515)"
      high_quality_mesh="$(arg high_quality_mesh)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    />
  </xacro:if>
  <xacro:if value="$(arg lidar)">
    <xacro:lidar
      base_parent="${lidar_base_parent}"
      prefix="${prefix_lidar}"
      joint_origin_xyz="${lidar_offset_xyz}"
      joint_origin_rpy="${lidar_offset_rpy}"
      collision="$(arg collision_lidar)"
      high_quality_mesh="$(arg high_quality_mesh)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    />
  </xacro:if>



  <!-- Gazebo - Self-collision -->
  <xacro:if value="$(arg gazebo_self_collide)">
    <gazebo>
      <self_collide>true</self_collide>
    </gazebo>
  </xacro:if>

</robot>
